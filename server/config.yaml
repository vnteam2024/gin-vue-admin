# github.com/flipped-aurora/gin-vue-admin/server Global Configuration

# jwt configuration
jwt:
  signing-key: qmPlus
  expires-time: 7d
  buffer-time: 1d
  issuer: qmPlus
# zap logger configuration
zap:
  level: info
  format: console
  prefix: "[github.com/flipped-aurora/gin-vue-admin/server]"
  director: log
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true

# redis configuration
redis:
  db: 0
  addr: 127.0.0.1:6379
  password: ""

# mongo configuration
mongo:
  coll: ''
  options: ''
  database: ''
  username: ''
  password: ''
  auth-source: ''
  min-pool-size: 0
  max-pool-size: 100
  socket-timeout-ms: 0
  connect-timeout-ms: 0
  is-zap: false
  hosts:
    - host: ''
      port: ''

# email configuration
email:
  to: xxx@qq.com
  port: 465
  from: xxx@163.com
  host: smtp.163.com
  is-ssl: true
  secret: xxx
  nickname: test

# system configuration
system:
env: local #Change to public to turn off routing log output
  addr: 8888
  db-type: mysql
oss-type: local # Control whether oss chooses to go to local or other warehouses such as Qiniu. To add other oss warehouses by yourself, you can configure the NewOss function in server/utils/upload/upload.go
use-redis: false # Use redis
use-mongo: false # Use mongo
  use-multipoint: false
# IP limit times: 15,000 times an hour
  iplimit-count: 15000
#IP limit for one hour
  iplimit-time: 3600
#Route global prefix
  router-prefix: ""

# captcha configuration
captcha:
  key-long: 6
  img-width: 240
  img-height: 80
open-captcha: 0 # 0 means always open, greater than 0 means limit the number of times
open-captcha-timeout: 3600 # It takes effect only when open-captcha is greater than 0

# mysql connect configuration
# Do not manually modify the database information before initialization! ! ! If you must initialize manually, please see (https://gin-vue-admin.com/docs/first_master)
mysql:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

# pgsql connect configuration
# Do not manually modify the database information before initialization! ! ! If you must initialize manually, please see (https://gin-vue-admin.com/docs/first_master)
pgsql:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false
oracle:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false
mssql:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false
sqlite:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false
db-list:
- disable: true # Whether to disable
type: "" # The type of database, currently supports mysql, pgsql, mssql, oracle
alias-name: "" # The name of the database, note: alias-name needs to be unique in db-list
    path: ""
    port: ""
    config: ""
    db-name: ""
    username: ""
    password: ""
    max-idle-conns: 10
    max-open-conns: 100
    log-mode: ""
    log-zap: false

# local configuration
local:
  path: uploads/file
  store-path: uploads/file

# autocode configuration
autocode:
  transfer-restart: true
# root automatically adapts to the project root directory
# Please do not configure it manually, it will identify the root path when the project is loaded.
  root: ""
  server: /server
  server-plug: /plugin/%s
  server-api: /api/v1/%s
  server-initialize: /initialize
  server-model: /model/%s
  server-request: /model/%s/request/
  server-router: /router/%s
  server-service: /service/%s
  web: /web/src
  web-api: /api
  web-form: /view
  web-table: /view

# qiniu configuration (please apply for the corresponding public key, private key bucket and domain name address from Qiniu yourself)
qiniu:
  zone: ZoneHuaDong
  bucket: ""
  img-path: ""
  use-https: false
  access-key: ""
  secret-key: ""
  use-cdn-domains: false

# aliyun oss configuration
aliyun-oss:
  endpoint: yourEndpoint
  access-key-id: yourAccessKeyId
  access-key-secret: yourAccessKeySecret
  bucket-name: yourBucketName
  bucket-url: yourBucketUrl
  base-path: yourBasePath

# tencent cos configuration
tencent-cos:
  bucket: xxxxx-10005608
  region: ap-shanghai
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/flipped-aurora/gin-vue-admin/server

# aws s3 configuration (minio compatible)
aws-s3:
  bucket: xxxxx-10005608
  region: ap-shanghai
  endpoint: ""
  s3-force-path-style: false
  disable-ssl: false
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/flipped-aurora/gin-vue-admin/server

# huawei obs configuration
hua-wei-obs:
  path: you-path
  bucket: you-bucket
  endpoint: you-endpoint
  access-key: you-access-key
  secret-key: you-secret-key

# excel configuration
excel:
  dir: ./resource/excel/

# Cross-domain configuration
# Need to be used with server/initialize/router.go -> `Router.Use(middleware.CorsByRules())`
cors:
mode: strict-whitelist # Release mode: allow-all, release all; whitelist, whitelist mode, requests from domain names in the whitelist add cors header; strict-whitelist strict whitelist mode, requests outside the whitelist will be rejected
  whitelist:
    - allow-origin: example1.com
      allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
      allow-methods: POST, GET
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type

allow-credentials: true # Boolean value
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
allow-credentials: true # Boolean value
