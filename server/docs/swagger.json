{
    "swagger": "2.0",
    "info": {
"description": "A full-stack development basic platform using gin+vue for extremely fast development",
"title": "Gin-Vue-Admin Swagger API interface document",
        "contact": {},
        "version": "v2.6.1"
    },
    "paths": {
        "/api/createApi": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "Create basic api",
                "parameters": [
                    {
"description": "api path, api Chinese description, api group, method",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Create basic api",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/deleteApi": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "delete api",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete api",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/deleteApisByIds": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "Delete selected API",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.IdsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete selected Api",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/freshCasbin": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "refresh casbin cache",
                "responses": {
                    "200": {
"description": "Refresh successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/getAllApis": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "Get all APIs without paging",
                "responses": {
                    "200": {
"description": "Get all APIs without paging, return including api list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysAPIListResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/getApiById": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "Get api based on id",
                "parameters": [
                    {
"description": "Get api based on id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetById"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get api based on id, return including api details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysAPIResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/getApiList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "Get the API list by pagination",
                "parameters": [
                    {
"description": "Get the API list by pagination",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SearchApiParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the API list in paging, and return the list, total number, page number, and number per page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/updateApi": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysApi"
                ],
"summary": "Modify the basic api",
                "parameters": [
                    {
"description": "api path, api Chinese description, api group, method",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Modify basic api",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authority/copyAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authority"
                ],
"summary": "copy character",
                "parameters": [
                    {
"description": "Old role id, new permission id, new permission name, new parent role id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/response.SysAuthorityCopyResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Copy role, return including system role details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysAuthorityResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authority/createAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authority"
                ],
"summary": "Create role",
                "parameters": [
                    {
"description": "Permission id, permission name, parent role id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAuthority"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Create role, return including system role details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysAuthorityResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authority/deleteAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authority"
                ],
"summary": "Delete role",
                "parameters": [
                    {
"description": "Delete role",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAuthority"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete role",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authority/getAuthorityList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authority"
                ],
"summary": "Get the role list by pagination",
                "parameters": [
                    {
"description": "Page number, size of each page",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the role list in paging, and return the list, total number, page number, and number per page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authority/setDataAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authority"
                ],
"summary": "Set role resource permissions",
                "parameters": [
                    {
"description": "Set role resource permissions",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAuthority"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Set role resource permissions",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authority/updateAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authority"
                ],
"summary": "Update character information",
                "parameters": [
                    {
"description": "Permission id, permission name, parent role id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAuthority"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Update role information, return including system role details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysAuthorityResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authorityBtn/canRemoveAuthorityBtn": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthorityBtn"
                ],
"summary": "Set permission button",
                "responses": {
                    "200": {
"description": "Delete successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authorityBtn/getAuthorityBtn": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthorityBtn"
                ],
"summary": "Get permission button",
                "parameters": [
                    {
"description": "Menu id, role id, selected button id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SysAuthorityBtnReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Return list successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysAuthorityBtnRes"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/authorityBtn/setAuthorityBtn": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthorityBtn"
                ],
"summary": "Set permission button",
                "parameters": [
                    {
"description": "Menu id, role id, selected button id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SysAuthorityBtnReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Return list successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/createPackage": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Create package",
                "parameters": [
                    {
"description": "Create package",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAutoCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Package created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/createPlug": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Create plug-in template",
                "parameters": [
                    {
"description": "Create plug-in template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAutoCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Plug-in template created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/createTemp": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "automatic code template",
                "parameters": [
                    {
"description": "Create automatic code",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.AutoCodeStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "{\"success\":true,\"data\":{},\"msg\":\"Created successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/autoCode/delPackage": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "delete package",
                "parameters": [
                    {
"description": "Create package",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAutoCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete package successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/delSysHistory": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Delete rollback records",
                "parameters": [
                    {
"description": "Request Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetById"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete rollback record",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/getColumn": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Get all fields of the current table",
                "responses": {
                    "200": {
"description": "Get all fields of the current table",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/getDatabase": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Get all current databases",
                "responses": {
                    "200": {
"description": "Get all current databases",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/getMeta": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Get meta information",
                "parameters": [
                    {
"description": "Request Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetById"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get meta information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/getPackage": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Get package",
                "responses": {
                    "200": {
"description": "Package created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/getSysHistory": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Query rollback records",
                "parameters": [
                    {
"description": "Request Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SysAutoHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Query the rollback record, return includes list, total number, page number, and number of each page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/getTables": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Get all tables in the current database",
                "responses": {
                    "200": {
"description": "Get all tables in the current database",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/installPlugin": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Install plug-in",
                "parameters": [
                    {
                        "type": "file",
                        "description": "this is a test file",
                        "name": "plug",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
"description": "Plug-in installed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/preview": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Preview the created code",
                "parameters": [
                    {
"description": "Preview creation code",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.AutoCodeStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Preview the created code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/pubPlug": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "packaging plug-in",
                "parameters": [
                    {
"description": "Packaging plug-in",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysAutoCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Packaging plug-in successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/autoCode/rollback": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoCode"
                ],
"summary": "Roll back automatically generated code",
                "parameters": [
                    {
"description": "Request Parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RollBack"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Rollback automatically generated code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/base/captcha": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Base"
                ],
"summary": "Generate verification code",
                "responses": {
                    "200": {
"description": "Generate verification code, return including random number id, base64, verification code length, whether to enable verification code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysCaptchaResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/base/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Base"
                ],
"summary": "User login",
                "parameters": [
                    {
"description": "Username, password, verification code",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Return includes user information, token, expiration time",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.LoginResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/casbin/UpdateCasbin": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
"summary": "Update role api permissions",
                "parameters": [
                    {
"description": "Permission id, permission model list",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CasbinInReceive"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Update role api permissions",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/casbin/getPolicyPathByAuthorityId": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
"summary": "Get the permission list",
                "parameters": [
                    {
"description": "Permission id, permission model list",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CasbinInReceive"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the permission list and return the list including casbin details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PolicyPathResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/customer/customer": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaCustomer"
                ],
"summary": "Get single customer information",
                "parameters": [
                    {
                        "type": "integer",
"description": "Primary key ID",
                        "name": "ID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Creation time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Customer name",
                        "name": "customerName",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Customer phone number",
                        "name": "customerPhoneData",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Management role ID",
                        "name": "sysUserAuthorityID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Management ID",
                        "name": "sysUserId",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Update time",
                        "name": "updatedAt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
"description": "Get single customer information, return including customer details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ExaCustomerResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaCustomer"
                ],
"summary": "Update customer information",
                "parameters": [
                    {
"description": "Customer ID, customer information",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.ExaCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Update customer information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaCustomer"
                ],
"summary": "Create a customer",
                "parameters": [
                    {
"description": "Customer username, customer mobile phone number",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.ExaCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Create customer",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaCustomer"
                ],
"summary": "Delete customer",
                "parameters": [
                    {
"description": "Customer ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.ExaCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete customer",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/customer/customerList": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaCustomer"
                ],
"summary": "Get the list of authorized customers in paging",
                "parameters": [
                    {
                        "type": "string",
"description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Size of each page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the list of authorized customers in paging, and return the list, total number, page number, and number per page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/email/emailTest": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
"summary": "Send test email",
                "responses": {
                    "200": {
"description": "{\"success\":true,\"data\":{},\"msg\":\"Sent successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/email/sendEmail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
"summary": "Send email",
                "parameters": [
                    {
"description": "Required parameters for sending emails",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/response.Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "{\"success\":true,\"data\":{},\"msg\":\"Sent successfully\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/fileUploadAndDownload/breakpointContinue": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaFileUploadAndDownload"
                ],
"summary": "Resume the breakpoint to the server",
                "parameters": [
                    {
                        "type": "file",
"description": "an example for breakpoint resume, breakpoint resume example",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
"description": "Resume breakpoint to server",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/fileUploadAndDownload/deleteFile": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaFileUploadAndDownload"
                ],
"summary": "delete file",
                "parameters": [
                    {
"description": "Just pass in the id in the file",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.ExaFileUploadAndDownload"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete file",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/fileUploadAndDownload/findFile": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaFileUploadAndDownload"
                ],
"summary": "Create file",
                "parameters": [
                    {
                        "type": "file",
"description": "Upload file completed",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
"description": "Create file, return including file path",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.FilePathResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/fileUploadAndDownload/getFileList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaFileUploadAndDownload"
                ],
"summary": "Paginated file list",
                "parameters": [
                    {
"description": "Page number, size of each page",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Paging file list, return includes list, total number, page number, number of pages per page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/fileUploadAndDownload/removeChunk": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaFileUploadAndDownload"
                ],
"summary": "delete slice",
                "parameters": [
                    {
                        "type": "file",
"description": "Delete cache slice",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete slice",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/fileUploadAndDownload/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExaFileUploadAndDownload"
                ],
"summary": "Upload file example",
                "parameters": [
                    {
                        "type": "file",
"description": "Upload file example",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
"description": "Upload file example, return including file details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ExaFileResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/init/checkdb": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CheckDB"
                ],
"summary": "Initialize user database",
                "responses": {
                    "200": {
"description": "Initialize user database",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/init/initdb": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InitDB"
                ],
"summary": "Initialize user database",
                "parameters": [
                    {
"description": "Initialization database parameters",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.InitDB"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Initialize user database",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jwt/jsonInBlacklist": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jwt"
                ],
"summary": "jwt added to the blacklist",
                "responses": {
                    "200": {
"description": "jwt added to blacklist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/addBaseMenu": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
"summary": "New menu",
                "parameters": [
                    {
"description": "Routing path, parent menu ID, routing name, corresponding front-end file path, sorting mark",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysBaseMenu"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "New menu",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/addMenuAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthorityMenu"
                ],
"summary": "Add the relationship between menu and role",
                "parameters": [
                    {
"description": "Role ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddMenuAuthorityInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Add the relationship between menu and role",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/deleteBaseMenu": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
"summary": "delete menu",
                "parameters": [
                    {
"description": "menu id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetById"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete menu",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/getBaseMenuById": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
"summary": "Get the menu based on id",
                "parameters": [
                    {
"description": "menu id",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetById"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the menu based on the id and return the system menu list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysBaseMenuResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/getBaseMenuTree": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthorityMenu"
                ],
"summary": "Get user dynamic routing",
                "parameters": [
                    {
"description": "empty",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get user dynamic routing, return including system menu list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysBaseMenusResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/getMenu": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthorityMenu"
                ],
"summary": "Get user dynamic routing",
                "parameters": [
                    {
"description": "empty",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get user dynamic routing and return a list including system menu details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysMenusResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/getMenuAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuthorityMenu"
                ],
"summary": "Get the specified role menu",
                "parameters": [
                    {
"description": "Role ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetAuthorityId"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the specified role menu",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/getMenuList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
"summary": "Get the basic menu list by pagination",
                "parameters": [
                    {
"description": "Page number, size of each page",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the basic menu list by paging, and return the list, total number, page number, and number per page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/menu/updateBaseMenu": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
"summary": "update menu",
                "parameters": [
                    {
"description": "Routing path, parent menu ID, routing name, corresponding front-end file path, sorting mark",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysBaseMenu"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Update menu",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionary/createSysDictionary": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionary"
                ],
"summary": "Create SysDictionary",
                "parameters": [
                    {
"description": "SysDictionary model",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysDictionary"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Create SysDictionary",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionary/deleteSysDictionary": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionary"
                ],
"summary": "delete SysDictionary",
                "parameters": [
                    {
"description": "SysDictionary model",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysDictionary"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete SysDictionary",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionary/findSysDictionary": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionary"
                ],
"summary": "Query SysDictionary with id",
                "parameters": [
                    {
                        "type": "integer",
"description": "Primary key ID",
                        "name": "ID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Creation time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Description",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Dictionary name (Chinese)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
"description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Dictionary name (English)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Update time",
                        "name": "updatedAt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
"description": "Query SysDictionary with id",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionary/getSysDictionaryList": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionary"
                ],
"summary": "Get the SysDictionary list by pagination",
                "responses": {
                    "200": {
"description": "Get the SysDictionary list by paging, and return the list, total number, page number, and number per page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionary/updateSysDictionary": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionary"
                ],
"summary": "Update SysDictionary",
                "parameters": [
                    {
"description": "SysDictionary model",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysDictionary"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Update SysDictionary",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionaryDetail/createSysDictionaryDetail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionaryDetail"
                ],
"summary": "Create SysDictionaryDetail",
                "parameters": [
                    {
"description": "SysDictionaryDetail model",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysDictionaryDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Create SysDictionaryDetail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionaryDetail/deleteSysDictionaryDetail": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionaryDetail"
                ],
"summary": "Delete SysDictionaryDetail",
                "parameters": [
                    {
"description": "SysDictionaryDetail model",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysDictionaryDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete SysDictionaryDetail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionaryDetail/findSysDictionaryDetail": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionaryDetail"
                ],
"summary": "Use id to query SysDictionaryDetail",
                "parameters": [
                    {
                        "type": "integer",
"description": "Primary key ID",
                        "name": "ID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Creation time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Extended value",
                        "name": "extend",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "display value",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Sort mark",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
"description": "Enabled status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "associated tag",
                        "name": "sysDictionaryID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Update time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "dictionary value",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
"description": "Query SysDictionaryDetail with id",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionaryDetail/getSysDictionaryDetailList": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionaryDetail"
                ],
"summary": "Get the SysDictionaryDetail list by pagination",
                "parameters": [
                    {
                        "type": "integer",
"description": "Primary key ID",
                        "name": "ID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Creation time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Extended value",
                        "name": "extend",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "display value",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Size of each page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Sort mark",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
"description": "Enabled status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "associated tag",
                        "name": "sysDictionaryID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Update time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "dictionary value",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the SysDictionaryDetail list by paging, and return the list, total number, page number, and number of each page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysDictionaryDetail/updateSysDictionaryDetail": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysDictionaryDetail"
                ],
"summary": "Update SysDictionaryDetail",
                "parameters": [
                    {
"description": "Update SysDictionaryDetail",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysDictionaryDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Update SysDictionaryDetail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysOperationRecord/createSysOperationRecord": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysOperationRecord"
                ],
"summary": "Create SysOperationRecord",
                "parameters": [
                    {
"description": "Create SysOperationRecord",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysOperationRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Create SysOperationRecord",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysOperationRecord/deleteSysOperationRecord": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysOperationRecord"
                ],
"summary": "Delete SysOperationRecord",
                "parameters": [
                    {
"description": "SysOperationRecord model",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysOperationRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete SysOperationRecord",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysOperationRecord/deleteSysOperationRecordByIds": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysOperationRecord"
                ],
"summary": "Delete SysOperationRecord in batches",
                "parameters": [
                    {
"description": "Delete SysOperationRecord in batches",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.IdsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete SysOperationRecord in batches",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysOperationRecord/findSysOperationRecord": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysOperationRecord"
                ],
"summary": "Query SysOperationRecord with id",
                "parameters": [
                    {
                        "type": "integer",
"description": "Primary key ID",
                        "name": "ID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Agent",
                        "name": "agent",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Request Body",
                        "name": "body",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Creation time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Error message",
                        "name": "error_message",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "request ip",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Latency",
                        "name": "latency",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Request method",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "request path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Response Body",
                        "name": "resp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Request status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Update time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "user id",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
"description": "Query SysOperationRecord with id",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sysOperationRecord/getSysOperationRecordList": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysOperationRecord"
                ],
"summary": "Get the SysOperationRecord list in paging",
                "parameters": [
                    {
                        "type": "integer",
"description": "Primary key ID",
                        "name": "ID",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Agent",
                        "name": "agent",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Request Body",
                        "name": "body",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Creation time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Error message",
                        "name": "error_message",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "request ip",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Latency",
                        "name": "latency",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Request method",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Size of each page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "request path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Response Body",
                        "name": "resp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "Request status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
"description": "Update time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
"description": "user id",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the SysOperationRecord list in paging, and return the list, total number, page number, and number of each page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/system/getServerInfo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
"summary": "Get server information",
                "responses": {
                    "200": {
"description": "Get server information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/system/getSystemConfig": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
"summary": "Get the configuration file content",
                "responses": {
                    "200": {
"description": "Get the configuration file content and return including system configuration",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysConfigResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/system/reloadSystem": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
"summary": "Restart the system",
                "responses": {
                    "200": {
"description": "Restart the system",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/system/setSystemConfig": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
"summary": "Set configuration file content",
                "parameters": [
                    {
"description": "Set configuration file content",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.System"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Set configuration file content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/SetSelfInfo": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "Set user information",
                "parameters": [
                    {
"description": "ID, username, nickname, avatar link",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Set user information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/admin_register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "User registration account",
                "parameters": [
                    {
"description": "Username, nickname, password, role ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "User registered account, return includes user information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SysUserResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/changePassword": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "User changes password",
                "parameters": [
                    {
"description": "Username, original password, new password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChangePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "User changes password",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/deleteUser": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "delete user",
                "parameters": [
                    {
"description": "User ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetById"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Delete user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/getUserInfo": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "Get user information",
                "responses": {
                    "200": {
"description": "Get user information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/getUserList": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "Get the user list by pagination",
                "parameters": [
                    {
"description": "Page number, size of each page",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Get the user list in paging, and return the list, total number, page number, and number per page",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PageResult"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/resetPassword": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "Reset user password",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Reset user password",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/setUserAuthorities": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "Set user permissions",
                "parameters": [
                    {
"description": "User UUID, role ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SetUserAuthorities"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Set user permissions",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/setUserAuthority": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "Change user permissions",
                "parameters": [
                    {
"description": "User UUID, role ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SetUserAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Set user permissions",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/setUserInfo": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SysUser"
                ],
"summary": "Set user information",
                "parameters": [
                    {
"description": "ID, username, nickname, avatar link",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/system.SysUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
"description": "Set user information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.AliyunOSS": {
            "type": "object",
            "properties": {
                "access-key-id": {
                    "type": "string"
                },
                "access-key-secret": {
                    "type": "string"
                },
                "base-path": {
                    "type": "string"
                },
                "bucket-name": {
                    "type": "string"
                },
                "bucket-url": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "config.Autocode": {
            "type": "object",
            "properties": {
                "root": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "server-api": {
                    "type": "string"
                },
                "server-initialize": {
                    "type": "string"
                },
                "server-model": {
                    "type": "string"
                },
                "server-plug": {
                    "type": "string"
                },
                "server-request": {
                    "type": "string"
                },
                "server-router": {
                    "type": "string"
                },
                "server-service": {
                    "type": "string"
                },
                "transfer-restart": {
                    "type": "boolean"
                },
                "web": {
                    "type": "string"
                },
                "web-api": {
                    "type": "string"
                },
                "web-form": {
                    "type": "string"
                },
                "web-table": {
                    "type": "string"
                }
            }
        },
        "config.AwsS3": {
            "type": "object",
            "properties": {
                "base-url": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "disable-ssl": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "path-prefix": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "s3-force-path-style": {
                    "type": "boolean"
                },
                "secret-id": {
                    "type": "string"
                },
                "secret-key": {
                    "type": "string"
                }
            }
        },
        "config.CORS": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string"
                },
                "whitelist": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.CORSWhitelist"
                    }
                }
            }
        },
        "config.CORSWhitelist": {
            "type": "object",
            "properties": {
                "allow-credentials": {
                    "type": "boolean"
                },
                "allow-headers": {
                    "type": "string"
                },
                "allow-methods": {
                    "type": "string"
                },
                "allow-origin": {
                    "type": "string"
                },
                "expose-headers": {
                    "type": "string"
                }
            }
        },
        "config.Captcha": {
            "type": "object",
            "properties": {
                "img-height": {
"description": "Verification code height",
                    "type": "integer"
                },
                "img-width": {
"description": "Verification code width",
                    "type": "integer"
                },
                "key-long": {
"description": "Verification code length",
                    "type": "integer"
                },
                "open-captcha": {
"description": "Explosion-proof verification code turns on this number, 0 means that a verification code is required for each login, other numbers represent incorrect passwords This number, such as 3, means that a verification code will appear after three errors.",
                    "type": "integer"
                },
                "open-captcha-timeout": {
"description": "Explosion-proof verification code timeout, unit: s (seconds)",
                    "type": "integer"
                }
            }
        },
        "config.Excel": {
            "type": "object",
            "properties": {
                "dir": {
                    "type": "string"
                }
            }
        },
        "config.HuaWeiObs": {
            "type": "object",
            "properties": {
                "access-key": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "secret-key": {
                    "type": "string"
                }
            }
        },
        "config.JWT": {
            "type": "object",
            "properties": {
                "buffer-time": {
"description": "Buffer time",
                    "type": "string"
                },
                "expires-time": {
"description": "Expiration time",
                    "type": "string"
                },
                "issuer": {
"description": "Issuer",
                    "type": "string"
                },
                "signing-key": {
"description": "jwt signature",
                    "type": "string"
                }
            }
        },
        "config.Local": {
            "type": "object",
            "properties": {
                "path": {
"description": "Local file access path",
                    "type": "string"
                },
                "store-path": {
"description": "Local file storage path",
                    "type": "string"
                }
            }
        },
        "config.Mongo": {
            "type": "object",
            "properties": {
                "coll": {
                    "description": "collection name",
                    "type": "string"
                },
                "connect-timeout-ms": {
"description": "Connection timeout period",
                    "type": "integer"
                },
                "database": {
                    "description": "database name",
                    "type": "string"
                },
                "hosts": {
"description": "Host list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.MongoHost"
                    }
                },
                "is-zap": {
"description": "Whether to enable zap logs",
                    "type": "boolean"
                },
                "max-pool-size": {
"description": "Maximum connection pool",
                    "type": "integer"
                },
                "min-pool-size": {
"description": "Minimum connection pool",
                    "type": "integer"
                },
                "options": {
                    "description": "mongodb options",
                    "type": "string"
                },
                "password": {
"description": "Password",
                    "type": "string"
                },
                "socket-timeout-ms": {
"description": "socket timeout time",
                    "type": "integer"
                },
                "username": {
"description": "Username",
                    "type": "string"
                }
            }
        },
        "config.MongoHost": {
            "type": "object",
            "properties": {
                "host": {
"description": "ip address",
                    "type": "string"
                },
                "port": {
"description": "Port",
                    "type": "string"
                }
            }
        },
        "config.Mssql": {
            "type": "object",
            "properties": {
                "config": {
"description": "Advanced configuration",
                    "type": "string"
                },
                "db-name": {
"description": "Database name",
                    "type": "string"
                },
                "engine": {
"description": "Database engine, default InnoDB",
                    "type": "string",
                    "default": "InnoDB"
                },
                "log-mode": {
"description": "Whether to enable Gorm global log",
                    "type": "string"
                },
                "log-zap": {
"description": "Whether to write log files through zap",
                    "type": "boolean"
                },
                "max-idle-conns": {
"description": "The maximum number of idle connections",
                    "type": "integer"
                },
                "max-open-conns": {
"description": "Maximum number of connections opened to the database",
                    "type": "integer"
                },
                "password": {
"description": "Database password",
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "singular": {
"description": "Whether to enable global disabling of plural numbers, true means enabled",
                    "type": "boolean"
                },
                "username": {
"description": "Database password",
                    "type": "string"
                }
            }
        },
        "config.Mysql": {
            "type": "object",
            "properties": {
                "config": {
"description": "Advanced configuration",
                    "type": "string"
                },
                "db-name": {
"description": "Database name",
                    "type": "string"
                },
                "engine": {
"description": "Database engine, default InnoDB",
                    "type": "string",
                    "default": "InnoDB"
                },
                "log-mode": {
"description": "Whether to enable Gorm global log",
                    "type": "string"
                },
                "log-zap": {
"description": "Whether to write log files through zap",
                    "type": "boolean"
                },
                "max-idle-conns": {
"description": "The maximum number of idle connections",
                    "type": "integer"
                },
                "max-open-conns": {
"description": "Maximum number of connections opened to the database",
                    "type": "integer"
                },
                "password": {
"description": "Database password",
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "singular": {
"description": "Whether to enable global disabling of plural numbers, true means enabled",
                    "type": "boolean"
                },
                "username": {
"description": "Database password",
                    "type": "string"
                }
            }
        },
        "config.Oracle": {
            "type": "object",
            "properties": {
                "config": {
"description": "Advanced configuration",
                    "type": "string"
                },
                "db-name": {
"description": "Database name",
                    "type": "string"
                },
                "engine": {
"description": "Database engine, default InnoDB",
                    "type": "string",
                    "default": "InnoDB"
                },
                "log-mode": {
"description": "Whether to enable Gorm global log",
                    "type": "string"
                },
                "log-zap": {
"description": "Whether to write log files through zap",
                    "type": "boolean"
                },
                "max-idle-conns": {
"description": "The maximum number of idle connections",
                    "type": "integer"
                },
                "max-open-conns": {
"description": "Maximum number of connections opened to the database",
                    "type": "integer"
                },
                "password": {
"description": "Database password",
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "singular": {
"description": "Whether to enable global disabling of plural numbers, true means enabled",
                    "type": "boolean"
                },
                "username": {
"description": "Database password",
                    "type": "string"
                }
            }
        },
        "config.Pgsql": {
            "type": "object",
            "properties": {
                "config": {
"description": "Advanced configuration",
                    "type": "string"
                },
                "db-name": {
"description": "Database name",
                    "type": "string"
                },
                "engine": {
"description": "Database engine, default InnoDB",
                    "type": "string",
                    "default": "InnoDB"
                },
                "log-mode": {
"description": "Whether to enable Gorm global log",
                    "type": "string"
                },
                "log-zap": {
"description": "Whether to write log files through zap",
                    "type": "boolean"
                },
                "max-idle-conns": {
"description": "The maximum number of idle connections",
                    "type": "integer"
                },
                "max-open-conns": {
"description": "Maximum number of connections opened to the database",
                    "type": "integer"
                },
                "password": {
"description": "Database password",
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "singular": {
"description": "Whether to enable global disabling of plural numbers, true means enabled",
                    "type": "boolean"
                },
                "username": {
"description": "Database password",
                    "type": "string"
                }
            }
        },
        "config.Qiniu": {
            "type": "object",
            "properties": {
                "access-key": {
"description": "Secret key AK",
                    "type": "string"
                },
                "bucket": {
"description": "Space name",
                    "type": "string"
                },
                "img-path": {
"description": "CDN accelerated domain name",
                    "type": "string"
                },
                "secret-key": {
"description": "Secret key SK",
                    "type": "string"
                },
                "use-cdn-domains": {
"description": "Whether to use CDN upload acceleration for uploading",
                    "type": "boolean"
                },
                "use-https": {
"description": "Whether to use https",
                    "type": "boolean"
                },
                "zone": {
"description": "Storage area",
                    "type": "string"
                }
            }
        },
        "config.Redis": {
            "type": "object",
            "properties": {
                "addr": {
"description": "Server address: port",
                    "type": "string"
                },
                "db": {
"description": "Which database of redis",
                    "type": "integer"
                },
                "password": {
"description": "Password",
                    "type": "string"
                }
            }
        },
        "config.Server": {
            "type": "object",
            "properties": {
                "aliyun-oss": {
                    "$ref": "#/definitions/config.AliyunOSS"
                },
                "autocode": {
                    "description": "auto",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.Autocode"
                        }
                    ]
                },
                "aws-s3": {
                    "$ref": "#/definitions/config.AwsS3"
                },
                "captcha": {
                    "$ref": "#/definitions/config.Captcha"
                },
                "cors": {
"description": "Cross-domain configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.CORS"
                        }
                    ]
                },
                "db-list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.SpecializedDB"
                    }
                },
                "email": {
                    "$ref": "#/definitions/github_com_flipped-aurora_gin-vue-admin_server_config.Email"
                },
                "excel": {
                    "$ref": "#/definitions/config.Excel"
                },
                "hua-wei-obs": {
                    "$ref": "#/definitions/config.HuaWeiObs"
                },
                "jwt": {
                    "$ref": "#/definitions/config.JWT"
                },
                "local": {
                    "description": "oss",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.Local"
                        }
                    ]
                },
                "mongo": {
                    "$ref": "#/definitions/config.Mongo"
                },
                "mssql": {
                    "$ref": "#/definitions/config.Mssql"
                },
                "mysql": {
                    "description": "gorm",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.Mysql"
                        }
                    ]
                },
                "oracle": {
                    "$ref": "#/definitions/config.Oracle"
                },
                "pgsql": {
                    "$ref": "#/definitions/config.Pgsql"
                },
                "qiniu": {
                    "$ref": "#/definitions/config.Qiniu"
                },
                "redis": {
                    "$ref": "#/definitions/config.Redis"
                },
                "sqlite": {
                    "$ref": "#/definitions/config.Sqlite"
                },
                "system": {
                    "$ref": "#/definitions/config.System"
                },
                "tencent-cos": {
                    "$ref": "#/definitions/config.TencentCOS"
                },
                "zap": {
                    "$ref": "#/definitions/config.Zap"
                }
            }
        },
        "config.SpecializedDB": {
            "type": "object",
            "properties": {
                "alias-name": {
                    "type": "string"
                },
                "config": {
"description": "Advanced configuration",
                    "type": "string"
                },
                "db-name": {
"description": "Database name",
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "engine": {
"description": "Database engine, default InnoDB",
                    "type": "string",
                    "default": "InnoDB"
                },
                "log-mode": {
"description": "Whether to enable Gorm global log",
                    "type": "string"
                },
                "log-zap": {
"description": "Whether to write log files through zap",
                    "type": "boolean"
                },
                "max-idle-conns": {
"description": "The maximum number of idle connections",
                    "type": "integer"
                },
                "max-open-conns": {
"description": "Maximum number of connections opened to the database",
                    "type": "integer"
                },
                "password": {
"description": "Database password",
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "singular": {
"description": "Whether to enable global disabling of plural numbers, true means enabled",
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "username": {
"description": "Database password",
                    "type": "string"
                }
            }
        },
        "config.Sqlite": {
            "type": "object",
            "properties": {
                "config": {
"description": "Advanced configuration",
                    "type": "string"
                },
                "db-name": {
"description": "Database name",
                    "type": "string"
                },
                "engine": {
"description": "Database engine, default InnoDB",
                    "type": "string",
                    "default": "InnoDB"
                },
                "log-mode": {
"description": "Whether to enable Gorm global log",
                    "type": "string"
                },
                "log-zap": {
"description": "Whether to write log files through zap",
                    "type": "boolean"
                },
                "max-idle-conns": {
"description": "The maximum number of idle connections",
                    "type": "integer"
                },
                "max-open-conns": {
"description": "Maximum number of connections opened to the database",
                    "type": "integer"
                },
                "password": {
"description": "Database password",
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "singular": {
"description": "Whether to enable global disabling of plural numbers, true means enabled",
                    "type": "boolean"
                },
                "username": {
"description": "Database password",
                    "type": "string"
                }
            }
        },
        "config.System": {
            "type": "object",
            "properties": {
                "addr": {
"description": "Port value",
                    "type": "integer"
                },
                "db-type": {
"description": "Database type: mysql (default)|sqlite|sqlserver|postgresql",
                    "type": "string"
                },
                "env": {
"description": "Environment value",
                    "type": "string"
                },
                "iplimit-count": {
                    "type": "integer"
                },
                "iplimit-time": {
                    "type": "integer"
                },
                "oss-type": {
"description": "Oss type",
                    "type": "string"
                },
                "router-prefix": {
                    "type": "string"
                },
                "use-mongo": {
"description": "Use redis",
                    "type": "boolean"
                },
                "use-multipoint": {
"description": "Multipoint login interception",
                    "type": "boolean"
                },
                "use-redis": {
"description": "Use redis",
                    "type": "boolean"
                }
            }
        },
        "config.TencentCOS": {
            "type": "object",
            "properties": {
                "base-url": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "path-prefix": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secret-id": {
                    "type": "string"
                },
                "secret-key": {
                    "type": "string"
                }
            }
        },
        "config.Zap": {
            "type": "object",
            "properties": {
                "director": {
"description": "Log folder",
                    "type": "string"
                },
                "encode-level": {
"description": "Encoding level",
                    "type": "string"
                },
                "format": {
"description": "Output",
                    "type": "string"
                },
                "level": {
"description": "Level",
                    "type": "string"
                },
                "log-in-console": {
"description": "Output console",
                    "type": "boolean"
                },
                "max-age": {
"description": "Log retention time",
                    "type": "integer"
                },
                "prefix": {
"description": "Log prefix",
                    "type": "string"
                },
                "show-line": {
"description": "Show line",
                    "type": "boolean"
                },
                "stacktrace-key": {
"description": "stack name",
                    "type": "string"
                }
            }
        },
        "example.ExaCustomer": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "customerName": {
"description": "Customer name",
                    "type": "string"
                },
                "customerPhoneData": {
"description": "Customer phone number",
                    "type": "string"
                },
                "sysUser": {
"description": "Management details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/system.SysUser"
                        }
                    ]
                },
                "sysUserAuthorityID": {
"description": "Management role ID",
                    "type": "integer"
                },
                "sysUserId": {
"description": "Management ID",
                    "type": "integer"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "example.ExaFile": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "chunkTotal": {
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "exaFileChunk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/example.ExaFileChunk"
                    }
                },
                "fileMd5": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                },
                "isFinish": {
                    "type": "boolean"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "example.ExaFileChunk": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "exaFileID": {
                    "type": "integer"
                },
                "fileChunkNumber": {
                    "type": "integer"
                },
                "fileChunkPath": {
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "example.ExaFileUploadAndDownload": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "key": {
"description": "Number",
                    "type": "string"
                },
                "name": {
"description": "file name",
                    "type": "string"
                },
                "tag": {
"description": "file tag",
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                },
                "url": {
"description": "File address",
                    "type": "string"
                }
            }
        },
        "github_com_flipped-aurora_gin-vue-admin_server_config.Email": {
            "type": "object",
            "properties": {
                "from": {
"description": "Sender: The email address you want to send the email to",
                    "type": "string"
                },
                "host": {
"description": "Server address such as smtp.qq.com Please go to QQ or the email address you want to send emails to check its SMTP protocol",
                    "type": "string"
                },
                "is-ssl": {
"description": "Whether SSL or not? Whether to enable SSL",
                    "type": "boolean"
                },
                "nickname": {
"description": "Nickname: the sender's nickname is usually your own email address",
                    "type": "string"
                },
                "port": {
"description": "Port Please go to QQ or the email address you want to send emails to check its SMTP protocol. Most of them are 465",
                    "type": "integer"
                },
                "secret": {
"description": "Key The key used for login. It is best not to use the email password. Go to the email SMTP to apply for a key used for login",
                    "type": "string"
                },
                "to": {
"description": "Recipients: multiple separated by English commas. Example: a@qq.com b@qq.com Please use this item as a parameter in official development",
                    "type": "string"
                }
            }
        },
        "request.AddMenuAuthorityInfo": {
            "type": "object",
            "properties": {
                "authorityId": {
"description": "Role ID",
                    "type": "integer"
                },
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenu"
                    }
                }
            }
        },
        "request.CasbinInReceive": {
            "type": "object",
            "properties": {
                "authorityId": {
"description": "Authority id",
                    "type": "integer"
                },
                "casbinInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.CasbinInfo"
                    }
                }
            }
        },
        "request.CasbinInfo": {
            "type": "object",
            "properties": {
                "method": {
"description": "method",
                    "type": "string"
                },
                "path": {
"description": "path",
                    "type": "string"
                }
            }
        },
        "request.ChangePasswordReq": {
            "type": "object",
            "properties": {
                "newPassword": {
"description": "New password",
                    "type": "string"
                },
                "password": {
"description": "Password",
                    "type": "string"
                }
            }
        },
        "request.Empty": {
            "type": "object"
        },
        "request.GetAuthorityId": {
            "type": "object",
            "properties": {
                "authorityId": {
"description": "Role ID",
                    "type": "integer"
                }
            }
        },
        "request.GetById": {
            "type": "object",
            "properties": {
                "id": {
"description": "Primary key ID",
                    "type": "integer"
                }
            }
        },
        "request.IdsReq": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "request.InitDB": {
            "type": "object",
            "required": [
                "dbName"
            ],
            "properties": {
                "dbName": {
"description": "Database name",
                    "type": "string"
                },
                "dbPath": {
"description": "sqlite database file path",
                    "type": "string"
                },
                "dbType": {
"description": "Database type",
                    "type": "string"
                },
                "host": {
"description": "Server address",
                    "type": "string"
                },
                "password": {
"description": "Database password",
                    "type": "string"
                },
                "port": {
"description": "Database connection port",
                    "type": "string"
                },
                "userName": {
"description": "Database user name",
                    "type": "string"
                }
            }
        },
        "request.Login": {
            "type": "object",
            "properties": {
                "captcha": {
"description": "Verification code",
                    "type": "string"
                },
                "captchaId": {
"description": "Verification code ID",
                    "type": "string"
                },
                "password": {
"description": "Password",
                    "type": "string"
                },
                "username": {
"description": "Username",
                    "type": "string"
                }
            }
        },
        "request.PageInfo": {
            "type": "object",
            "properties": {
                "keyword": {
"description": "Keyword",
                    "type": "string"
                },
                "page": {
"description": "Page number",
                    "type": "integer"
                },
                "pageSize": {
"description": "Size of each page",
                    "type": "integer"
                }
            }
        },
        "request.Register": {
            "type": "object",
            "properties": {
                "authorityId": {
                    "type": "string",
"example": "int role id"
                },
                "authorityIds": {
                    "type": "string",
"example": "[]uint role id"
                },
                "email": {
                    "type": "string",
"example": "email"
                },
                "enable": {
                    "type": "string",
"example": "int whether to enable"
                },
                "headerImg": {
                    "type": "string",
"example": "Avatar link"
                },
                "nickName": {
                    "type": "string",
"example": "nickname"
                },
                "passWord": {
                    "type": "string",
"example": "password"
                },
                "phone": {
                    "type": "string",
"example": "phone number"
                },
                "userName": {
                    "type": "string",
"example": "username"
                }
            }
        },
        "request.RollBack": {
            "type": "object",
            "properties": {
                "deleteTable": {
"description": "Whether to delete the table",
                    "type": "boolean"
                },
                "id": {
"description": "Primary key ID",
                    "type": "integer"
                }
            }
        },
        "request.SearchApiParams": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "apiGroup": {
"description": "api group",
                    "type": "string"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "desc": {
"description": "Sorting method: ascending false (default) | descending true",
                    "type": "boolean"
                },
                "description": {
"description": "api Chinese description",
                    "type": "string"
                },
                "keyword": {
"description": "Keyword",
                    "type": "string"
                },
                "method": {
"description": "Method: Create POST (default) | View GET | Update PUT | Delete DELETE",
                    "type": "string"
                },
                "orderKey": {
"description": "Sorting",
                    "type": "string"
                },
                "page": {
"description": "Page number",
                    "type": "integer"
                },
                "pageSize": {
"description": "Size of each page",
                    "type": "integer"
                },
                "path": {
"description": "api path",
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "request.SetUserAuth": {
            "type": "object",
            "properties": {
                "authorityId": {
"description": "Role ID",
                    "type": "integer"
                }
            }
        },
        "request.SetUserAuthorities": {
            "type": "object",
            "properties": {
                "authorityIds": {
"description": "Role ID",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.SysAuthorityBtnReq": {
            "type": "object",
            "properties": {
                "authorityId": {
                    "type": "integer"
                },
                "menuID": {
                    "type": "integer"
                },
                "selected": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "request.SysAutoHistory": {
            "type": "object",
            "properties": {
                "keyword": {
"description": "Keyword",
                    "type": "string"
                },
                "page": {
"description": "Page number",
                    "type": "integer"
                },
                "pageSize": {
"description": "Size of each page",
                    "type": "integer"
                }
            }
        },
        "response.Email": {
            "type": "object",
            "properties": {
                "body": {
"description": "Email content",
                    "type": "string"
                },
                "subject": {
"description": "Email title",
                    "type": "string"
                },
                "to": {
"description": "Who to send the email to",
                    "type": "string"
                }
            }
        },
        "response.ExaCustomerResponse": {
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/example.ExaCustomer"
                }
            }
        },
        "response.ExaFileResponse": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/example.ExaFileUploadAndDownload"
                }
            }
        },
        "response.FilePathResponse": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                }
            }
        },
        "response.FileResponse": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/example.ExaFile"
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/system.SysUser"
                }
            }
        },
        "response.PageResult": {
            "type": "object",
            "properties": {
                "list": {},
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.PolicyPathResponse": {
            "type": "object",
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.CasbinInfo"
                    }
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "response.SysAPIListResponse": {
            "type": "object",
            "properties": {
                "apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysApi"
                    }
                }
            }
        },
        "response.SysAPIResponse": {
            "type": "object",
            "properties": {
                "api": {
                    "$ref": "#/definitions/system.SysApi"
                }
            }
        },
        "response.SysAuthorityBtnRes": {
            "type": "object",
            "properties": {
                "selected": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "response.SysAuthorityCopyResponse": {
            "type": "object",
            "properties": {
                "authority": {
                    "$ref": "#/definitions/system.SysAuthority"
                },
                "oldAuthorityId": {
"description": "Old role ID",
                    "type": "integer"
                }
            }
        },
        "response.SysAuthorityResponse": {
            "type": "object",
            "properties": {
                "authority": {
                    "$ref": "#/definitions/system.SysAuthority"
                }
            }
        },
        "response.SysBaseMenuResponse": {
            "type": "object",
            "properties": {
                "menu": {
                    "$ref": "#/definitions/system.SysBaseMenu"
                }
            }
        },
        "response.SysBaseMenusResponse": {
            "type": "object",
            "properties": {
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenu"
                    }
                }
            }
        },
        "response.SysCaptchaResponse": {
            "type": "object",
            "properties": {
                "captchaId": {
                    "type": "string"
                },
                "captchaLength": {
                    "type": "integer"
                },
                "openCaptcha": {
                    "type": "boolean"
                },
                "picPath": {
                    "type": "string"
                }
            }
        },
        "response.SysConfigResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/config.Server"
                }
            }
        },
        "response.SysMenusResponse": {
            "type": "object",
            "properties": {
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysMenu"
                    }
                }
            }
        },
        "response.SysUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/system.SysUser"
                }
            }
        },
        "system.AutoCodeStruct": {
            "type": "object",
            "properties": {
                "abbreviation": {
"description": "Struct abbreviation",
                    "type": "string"
                },
                "autoCreateApiToSql": {
"description": "Whether to automatically create api",
                    "type": "boolean"
                },
                "autoCreateResource": {
"description": "Whether to automatically create resource identifiers",
                    "type": "boolean"
                },
                "autoMoveFile": {
"description": "Whether to automatically move files",
                    "type": "boolean"
                },
                "businessDB": {
"description": "Business database",
                    "type": "string"
                },
                "description": {
"description": "Struct Chinese name",
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.Field"
                    }
                },
                "hasTimer": {
                    "type": "boolean"
                },
                "humpPackageName": {
"description": "go file name",
                    "type": "string"
                },
                "package": {
                    "type": "string"
                },
                "packageName": {
"description": "File name",
                    "type": "string"
                },
                "structName": {
"description": "Struct name",
                    "type": "string"
                },
                "tableName": {
"description": "table name",
                    "type": "string"
                }
            }
        },
        "system.Field": {
            "type": "object",
            "properties": {
                "clearable": {
"description": "Whether it can be cleared",
                    "type": "boolean"
                },
                "columnName": {
"description": "Database field",
                    "type": "string"
                },
                "comment": {
"description": "Database field description",
                    "type": "string"
                },
                "dataTypeLong": {
"description": "Database field length",
                    "type": "string"
                },
                "dictType": {
"description": "Dictionary",
                    "type": "string"
                },
                "errorText": {
"description": "Verification failure text",
                    "type": "string"
                },
                "fieldDesc": {
"description": "Chinese name",
                    "type": "string"
                },
                "fieldJson": {
                    "description": "FieldJson",
                    "type": "string"
                },
                "fieldName": {
"description": "Field name",
                    "type": "string"
                },
                "fieldSearchType": {
"description": "Search conditions",
                    "type": "string"
                },
                "fieldType": {
"description": "Field data type",
                    "type": "string"
                },
                "require": {
"description": "Is it required?",
                    "type": "boolean"
                },
                "sort": {
"description": "Whether to increase sorting",
                    "type": "boolean"
                }
            }
        },
        "system.Meta": {
            "type": "object",
            "properties": {
                "activeName": {
                    "type": "string"
                },
                "closeTab": {
"description": "Automatically close tab",
                    "type": "boolean"
                },
                "defaultMenu": {
"description": "Whether it is a basic route (under development)",
                    "type": "boolean"
                },
                "icon": {
"description": "menu icon",
                    "type": "string"
                },
                "keepAlive": {
"description": "Whether to cache",
                    "type": "boolean"
                },
                "title": {
"description": "menu name",
                    "type": "string"
                }
            }
        },
        "system.SysApi": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "apiGroup": {
"description": "api group",
                    "type": "string"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "description": {
"description": "api Chinese description",
                    "type": "string"
                },
                "method": {
"description": "Method: Create POST (default) | View GET | Update PUT | Delete DELETE",
                    "type": "string"
                },
                "path": {
"description": "api path",
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "system.SysAuthority": {
            "type": "object",
            "properties": {
                "authorityId": {
"description": "Role ID",
                    "type": "integer"
                },
                "authorityName": {
"description": "role name",
                    "type": "string"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysAuthority"
                    }
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "dataAuthorityId": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysAuthority"
                    }
                },
                "defaultRouter": {
"description": "Default menu (default dashboard)",
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenu"
                    }
                },
                "parentId": {
"description": "Parent role ID",
                    "type": "integer"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "system.SysAutoCode": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "packageName": {
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "system.SysBaseMenu": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "authoritys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysAuthority"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenu"
                    }
                },
                "component": {
"description": "Corresponding front-end file path",
                    "type": "string"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "hidden": {
"description": "Whether to hide in the list",
                    "type": "boolean"
                },
                "menuBtn": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenuBtn"
                    }
                },
                "meta": {
"description": "Additional attributes",
                    "allOf": [
                        {
                            "$ref": "#/definitions/system.Meta"
                        }
                    ]
                },
                "name": {
"description": "route name",
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenuParameter"
                    }
                },
                "parentId": {
"description": "Parent menu ID",
                    "type": "string"
                },
                "path": {
"description": "Routing path",
                    "type": "string"
                },
                "sort": {
"description": "Sort mark",
                    "type": "integer"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "system.SysBaseMenuBtn": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sysBaseMenuID": {
                    "type": "integer"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "system.SysBaseMenuParameter": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "key": {
"description": "key that carries parameters in the address bar",
                    "type": "string"
                },
                "sysBaseMenuID": {
                    "type": "integer"
                },
                "type": {
"description": "Whether the parameters carried in the address bar are params or query",
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                },
                "value": {
"description": "The value of the parameter carried in the address bar",
                    "type": "string"
                }
            }
        },
        "system.SysDictionary": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "desc": {
"description": "Description",
                    "type": "string"
                },
                "name": {
"description": "Dictionary name (Chinese)",
                    "type": "string"
                },
                "status": {
"description": "Status",
                    "type": "boolean"
                },
                "sysDictionaryDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysDictionaryDetail"
                    }
                },
                "type": {
"description": "Dictionary name (English)",
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "system.SysDictionaryDetail": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "extend": {
"description": "Extended value",
                    "type": "string"
                },
                "label": {
"description": "display value",
                    "type": "string"
                },
                "sort": {
"description": "Sort mark",
                    "type": "integer"
                },
                "status": {
"description": "Enabled status",
                    "type": "boolean"
                },
                "sysDictionaryID": {
"description": "associated tag",
                    "type": "integer"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                },
                "value": {
"description": "dictionary value",
                    "type": "integer"
                }
            }
        },
        "system.SysMenu": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "authoritys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysAuthority"
                    }
                },
                "btns": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysMenu"
                    }
                },
                "component": {
"description": "Corresponding front-end file path",
                    "type": "string"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "hidden": {
"description": "Whether to hide in the list",
                    "type": "boolean"
                },
                "menuBtn": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenuBtn"
                    }
                },
                "menuId": {
                    "type": "string"
                },
                "meta": {
"description": "Additional attributes",
                    "allOf": [
                        {
                            "$ref": "#/definitions/system.Meta"
                        }
                    ]
                },
                "name": {
"description": "route name",
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysBaseMenuParameter"
                    }
                },
                "parentId": {
"description": "Parent menu ID",
                    "type": "string"
                },
                "path": {
"description": "Routing path",
                    "type": "string"
                },
                "sort": {
"description": "Sort mark",
                    "type": "integer"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                }
            }
        },
        "system.SysOperationRecord": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "agent": {
"description": "Agent",
                    "type": "string"
                },
                "body": {
"description": "Request Body",
                    "type": "string"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "error_message": {
"description": "Error message",
                    "type": "string"
                },
                "ip": {
"description": "request ip",
                    "type": "string"
                },
                "latency": {
"description": "Latency",
                    "type": "string"
                },
                "method": {
"description": "Request method",
                    "type": "string"
                },
                "path": {
"description": "request path",
                    "type": "string"
                },
                "resp": {
"description": "Response Body",
                    "type": "string"
                },
                "status": {
"description": "Request status",
                    "type": "integer"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/system.SysUser"
                },
                "user_id": {
"description": "user id",
                    "type": "integer"
                }
            }
        },
        "system.SysUser": {
            "type": "object",
            "properties": {
                "ID": {
"description": "Primary key ID",
                    "type": "integer"
                },
                "activeColor": {
"description": "Active color",
                    "type": "string"
                },
                "authorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/system.SysAuthority"
                    }
                },
                "authority": {
                    "$ref": "#/definitions/system.SysAuthority"
                },
                "authorityId": {
"description": "User role ID",
                    "type": "integer"
                },
                "baseColor": {
"description": "base color",
                    "type": "string"
                },
                "createdAt": {
"description": "Creation time",
                    "type": "string"
                },
                "email": {
"description": "User's email",
                    "type": "string"
                },
                "enable": {
"description": "Whether the user is frozen 1 normal 2 frozen",
                    "type": "integer"
                },
                "headerImg": {
"description": "User avatar",
                    "type": "string"
                },
                "nickName": {
"description": "User nickname",
                    "type": "string"
                },
                "phone": {
"description": "User's mobile phone number",
                    "type": "string"
                },
                "sideMode": {
"description": "User side theme",
                    "type": "string"
                },
                "updatedAt": {
"description": "Update time",
                    "type": "string"
                },
                "userName": {
"description": "User login name",
                    "type": "string"
                },
                "uuid": {
"description": "UserUUID",
                    "type": "string"
                }
            }
        },
        "system.System": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/config.Server"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "x-token",
            "in": "header"
        }
    }
}
